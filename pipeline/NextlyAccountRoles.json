{
	"name": "NextlyAccountRoles",
	"properties": {
		"activities": [
			{
				"name": "NextlyAccountRoles_CopyData",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "NextlyAccountRoles_StagingTruncate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFolderPath": "PROD/NextlyAccountRoles",
							"wildcardFileName": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							},
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AccountNumber",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AccountNumber",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RoleEntityNumber",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "RoleEntityNumber",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RoleEntityTypeCode",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "RoleEntityTypeCode",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RoleCode",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "RoleCode",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RoleDescription",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "RoleDescription",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "MemberName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MemberName",
									"type": "String",
									"physicalType": "varchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "OfflinSource_NextlyAccountRoles",
						"type": "DatasetReference",
						"parameters": {
							"NextlyAccountRoles": "@pipeline().parameters.FileName"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "OfflineDestination_NextlyAccountRoles",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "NextlyAccountRoles_StagingTruncate",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SCCU_OfflineModedb_PROD_DTU",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "TRUNCATE TABLE NextlyAccountRoles_Staging"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "NextlyAccountRoles_CopyData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "Spi_InsertToMemberRolesDetails"
				},
				"linkedServiceName": {
					"referenceName": "SCCU_OfflineModedb_PROD_DTU",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy data2",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Stored procedure1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFolderPath": "PROD/NextlyAccountRoles",
							"wildcardFileName": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Completed_NextlyAccountRoles_Source",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Completed_NextlyAccountRoles_Sink",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"FileName": {
				"type": "string",
				"defaultValue": "NextlyAccountRoles*.csv"
			},
			"FilePath": {
				"type": "string",
				"defaultValue": "offline-services/PROD/NextlyAccountRoles"
			}
		},
		"folder": {
			"name": "OfflineServices"
		},
		"annotations": []
	}
}